import{_ as l,c as i,a,b as s,t as p,d as e,e as o,o as r,r as c}from"./app.d0dbe5e1.js";const b=JSON.parse('{"title":"Metrist API","description":"","frontmatter":{"title":"Metrist API"},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"API keys","slug":"api-keys","link":"#api-keys","children":[]},{"level":2,"title":"Versioning","slug":"versioning","link":"#versioning","children":[]},{"level":2,"title":"API Calls","slug":"api-calls","link":"#api-calls","children":[{"level":3,"title":"Get Monitor Status","slug":"get-monitor-status","link":"#get-monitor-status","children":[]},{"level":3,"title":"Add Monitor Configuration","slug":"add-monitor-configuration","link":"#add-monitor-configuration","children":[]},{"level":3,"title":"Delete Monitor Configuration","slug":"delete-monitor-configuration","link":"#delete-monitor-configuration","children":[]}]}],"relativePath":"tools/api.md","lastUpdated":1669071708000}'),u={name:"tools/api.md"},d={id:"frontmatter-title",tabindex:"-1"},h=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),y=o(`<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>Metrist has a REST-like API that allows you to obtain things like service monitor statuses automatically.</p><h2 id="api-keys" tabindex="-1">API keys <a class="header-anchor" href="#api-keys" aria-hidden="true">#</a></h2><p>Authorization to the API is through your API key, which you can get from <a href="https://app.metrist.io/profile" target="_blank" rel="noreferrer">https://app.metrist.io/profile</a>. The key is an opaque string that you pass in through as a bearer token in an authorization header:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">Authorization: Bearer API_TOKEN_GOES_HERE</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="versioning" tabindex="-1">Versioning <a class="header-anchor" href="#versioning" aria-hidden="true">#</a></h2><p>The API request path contains a version number that we use for major, breaking updates. Currently we have API calls in the following versions:</p><ul><li><p><code>v0</code></p><p>This version is always reserved for experimental API calls that we are testing (either with customers or for ourselves) before making generally available. If you use v0 API calls, you must expect them to go away without notice as they migrate to the current major version (after a short notice period).</p></li><li><p><code>v1</code></p><p>This is our current stable production version. You can expect API calls to be around for a long time, even if we migrate to newer versions. If we decide to deprecate API calls in stable versions, we will give multiple notices and ample time to move to replacement versions.</p></li></ul><h2 id="api-calls" tabindex="-1">API Calls <a class="header-anchor" href="#api-calls" aria-hidden="true">#</a></h2>`,9),C={id:"get-monitor-status",tabindex:"-1"},A=a("a",{class:"header-anchor",href:"#get-monitor-status","aria-hidden":"true"},"#",-1),m=o(`<p>Return the status of one or more monitors.</p><ul><li>Path: <code>/api/v0/monitor-status</code></li><li>Verb: GET</li><li>Status: experimental</li></ul><p>Parameters:</p><ul><li><p><code>m[]</code></p><p>One or more monitors to get the status for. These should be the logical names for the monitors. These names may be monitors you have created or any of the <a href="./.html">monitors in Metrist\u2019s library</a>.</p><p>Returns an array of JSON objects containing logical name, display name and status for each monitor that could be found (invalid logical names simply will not return a corresponding object).</p><p>Example:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">curl -H </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Authorization: Bearer XXX</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://app.metrist.io/api/v0/monitor-status?m[]=testsignal</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>Returns:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">monitor_logical_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">testsignal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">last_checked</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2022-04-21T14:58:17.175203</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">state</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">up</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div></li></ul><h4 id="values-for-monitor-parameter" tabindex="-1">Values for Monitor Parameter <a class="header-anchor" href="#values-for-monitor-parameter" aria-hidden="true">#</a></h4><p>The following values are available for the <code>m[]</code> parameter(s): see <a href="/monitors/shared/">Shared monitors</a>.</p><h3 id="add-monitor-configuration" tabindex="-1">Add Monitor Configuration <a class="header-anchor" href="#add-monitor-configuration" aria-hidden="true">#</a></h3><p>Adds a monitor configuration.</p><ul><li>Path: <code>/api/v0/monitor-config/</code></li><li>Verb: POST</li><li>Status: experimental</li></ul><p>Sample request body:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;monitor_logical_name&quot;: &quot;asana&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;interval_secs&quot;: 120,</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;run_groups&quot;: [&quot;Metrist Orchestrator&quot;],</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;run_spec&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;name&quot;: &quot;asana&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;run_type&quot;: &quot;dll&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  },</span></span>
<span class="line"><span style="color:#A6ACCD;">  &quot;steps&quot;: [</span></span>
<span class="line"><span style="color:#A6ACCD;">    {</span></span>
<span class="line"><span style="color:#A6ACCD;">      &quot;check_logical_name&quot;: &quot;Ping&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">      &quot;timeout_secs&quot;: 900</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Returns the ID of the MonitorConfig object.</p><p>Example:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">curl -d $JSON -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer XXX&quot; &#39;https://app.metrist.io/api/v0/monitor-config&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Returns:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">11y9YlrWxXf39mRWIrhFtPl</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="delete-monitor-configuration" tabindex="-1">Delete Monitor Configuration <a class="header-anchor" href="#delete-monitor-configuration" aria-hidden="true">#</a></h3><p>Deletes a monitor configuration.</p><ul><li>Path: <code>/api/v0/monitor-config/:id</code></li><li>Verb: DELETE</li><li>Status: experimental</li></ul><p>Example:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">curl -X DELETE -H &quot;Authorization: Bearer XXX&quot; &#39;https://app.metrist.io/api/v0/monitor-config/asana/11y9YlrWxXf39mRWIrhFtPl&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Returns:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">OK</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,23);function D(t,g,f,_,v,F){const n=c("Badge");return r(),i("div",null,[a("h1",d,[s(p(t.$frontmatter.title)+" ",1),e(n,{type:"warning",text:"beta"}),s(),h]),y,a("h3",C,[s("Get Monitor Status "),e(n,{type:"warning",text:"experimental"}),s(),A]),m])}const k=l(u,[["render",D]]);export{b as __pageData,k as default};
